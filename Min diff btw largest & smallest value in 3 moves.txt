Problem Link - https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/description/?envType=daily-question&envId=2024-07-03

Problem - You are given an integer array nums.In one move, you can choose one element of nums and change it to 
any value. Return the minimum difference between the largest and smallest value of nums after performing at 
most three moves.

Intuition - Another approach involves computing the difference between the maximum and minimum values within 
each sliding window of size len(nums) - 3. This approach simplifies the implementation and enhances readability 
compared to the previous method.



import java.util.Arrays;
class Solution {
    public int minDifference(int[] nums) {
        int n=nums.length;
        if (n<=4) {
            return 0;
        }
        Arrays.sort(nums);
        int res=Integer.MAX_VALUE;
        for (int i=0;i<4;i++) {
            res=Math.min(res,nums[n-1-3+i]-nums[i]);
        }
        return res;
    }
}
